---
interface Props {
    cards: [];
    data: {
       [key: string]: any
    };
}
interface Card {
    title: string;
    content: string;
    icon_name: string;
}

import { Icon } from "astro-icon/components";
import "./stats.css"
import Container from "@components/Container.astro";
const {cards, data} = Astro.props

const cardStyles = [
    { bg: 'var(--clr-primary)' },
    { bg: 'var(--clr-tertiary)' },
    { bg: 'var(--clr-secondary)' },
    { bg: 'var(--clr-tertiary)' },
    { bg: 'var(--clr-primary)' },
    { bg: 'var(--clr-secondary)' },
];
---

<Container>
    <div class="simple-stats__container container">
        <div class="simple-stats__grid">
            <div class="simple-stats__header">
                <div class="simple-stats__header-content">
                    <h2>{data.title}</h2>
                    <slot class="simple-stats__description" set:html={data.content} />
                </div>
            </div>
            {
                cards.map((card: Card, index: number) => {
                    const style = cardStyles[index % cardStyles.length];
                    return (
                        <div 
                            class="simple-stats__item"
                            style={`background-color: ${style.bg};`}
                        >
                            <div class="simple-stats__icon-box">
                                <Icon class="simple-stats__icon" name={card.icon_name} aria-hidden="true" focusable="false" />
                            </div>
                            <div class="simple-stats__item-content">
                                <h3>{card.title}</h3>
                                <slot class="simple-stats__description" set:html={card.content} />
                            </div>
                        </div>
                    )
                })
            }
        </div>
    </div>
</Container>