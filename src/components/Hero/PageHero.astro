---
import type { HeroProps } from "@utils/types";
import BlackModern from "./BlackModern/BlackModern.astro";
import Gradient from "./Gradient/Gradient.astro";
import AlternateHorizontal from "./AlternateHorizontal/AlternateHorizontal.astro";
import Overflow from "./Overflow/Overflow.astro";
import TwoColumnHero from "./TwoColumnHero/TwoColumnHero.astro";
import VerticalWithImage from "./VerticalWithImage/VerticalWithImage.astro";
import TwoSquares from "./TwoSquares/TwoSquares.astro";
import DefaultHorizontal from "./DefaultHorizontal/DefaultHorizontal.astro";
import BigName from "./BigName/BigName.astro";
import WavyHero from "./WavyHero/WavyHero.astro";
import CenteredImage from "./CenteredImage/CenteredImage.astro";
interface Props extends HeroProps {}
const { title, excerpt, image, cover, type, cards } = Astro.props;
const heroProps: HeroProps = {
    title,
    excerpt,
    image,
    cover,
    type
}
---
{type === "wavy" && <WavyHero {...heroProps} />}
{type === "default horizontal" && <DefaultHorizontal {...heroProps} grid={cards}/>}
{type === "gradient" && (<Gradient {...heroProps} cards={cards} />)}
{type === "black modern" && <BlackModern {...heroProps} />}
{type === "alternate horizontal" && <AlternateHorizontal {...heroProps} />}
{type === "alternate vertical" && <VerticalWithImage {...heroProps} />}
{type === "two column" && <TwoColumnHero {...heroProps} />}
{type === "two square" && <TwoSquares {...heroProps} />}
{type === "big name" && <BigName {...heroProps} />}
{type === "centered image" && <CenteredImage {...heroProps} />}
{(!type || type === "default") && <Overflow {...heroProps} />}

