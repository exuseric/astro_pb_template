/* Core navigation styling with a clean CSS custom property system */
.sticky-nav {
    --nav-bg: var(--clr-neutral-50);
    --nav-text: var(--clr-neutral-900);

    --nav-active-bg: var(--clr-neutral-50);
    --nav-active-text: oklch(from var(--nav-active-bg) calc(l - 0.8) c h);

    --nav-hover-bg: var(--clr-secondary-dark);
    --nav-hover-text: var(--clr-neutral-50);

    --nav-cta-bg: var(--clr-primary);
    --nav-cta-text: var(--clr-neutral-50);

    --nav-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;
    --nav-transition: 250ms var(--snappy-bounce-ease);
    --nav-link-transition: 0.6s cubic-bezier(0.53, 0.21, 0, 1);

    position: sticky;
    top: 0;
    z-index: 9999;
    width: 100%;
    padding: var(--size-3) 0;
    transition: all var(--nav-transition);
}

/* Fixed menu state */
.sticky-nav[data-fixed-menu="true"] {
    --nav-text: var(--clr-neutral-50)
    --nav-bg: transparent;
    position: fixed;
    top: 0;
    width: 100%;
    height: max-content;
    color: var(--clr-neutral-50);
    background-color: transparent;
}

/* Active state */
.sticky-nav[data-is-active="true"] {
    padding: var(--size-2) 0;
    color: var(--nav-active-text);
    background-color: var(--nav-active-bg);
    box-shadow: var(--nav-shadow);
}
.sticky-nav[data-is-active="false"] {
    padding: var(--size-2) 0;
    color: var(--nav-text);
    background-color: var(--nav-bg);
}

.sticky-nav[data-is-active="false"][data-fixed-menu="true"] {
    color: var(--clr-neutral-50);
    background-color: transparent;
}

/* Menu styles for fixed state */
.sticky-nav[data-fixed-menu="true"] .sticky-nav__menu {
    color: var(--nav-text);
    background-color: var(--nav-bg);
    padding: var(--size-2);
}

/* For black text override */
.sticky-nav[data-black-text="true"] .sticky-nav__logo {
    color: var(--clr-primary-darker);
}

/* Logo styling */
.sticky-nav__logo {
    display: flex;
    align-items: center;
    gap: var(--size-1);
    width: fit-content;
    font-size: var(--body-large);
    font-weight: var(--body-medium-weight);
    text-decoration: none;
    color: currentColor;
    cursor: pointer;
}

.sticky-nav__logo-image {
    width: auto;
    max-height: 60px;
}

.sticky-nav__logo-text {
    font-weight: var(--heading-large-weight);
}

/* Layout */
.sticky-nav__wrapper {
    display: grid;
    grid-template-columns: repeat(2, auto);
    grid-template-rows: repeat(2, auto);
    gap: var(--size-2);
}

/* Actions area */
.sticky-nav__actions {
    grid-column: 2 / -1;
    grid-row: 1 / 2;
    justify-self: end;
    display: flex;
    align-items: center;
    gap: var(--size-1);
    width: fit-content;
}

/* Menu styling */
.sticky-nav__menu {
    grid-column: 1 / -1;
    display: grid;
    grid-auto-rows: auto;
    list-style: none;
}

.sticky-nav__menu li {
    display: flex;
    justify-content: center;
    flex-direction: column;
}

.sticky-nav__menu a {
    text-transform: capitalize;
    font-weight: var(--heading-large-weight);
}

/* Toggle menu visibility */
.sticky-nav__menu[data-is-active="true"] {
    display: grid;
}

.sticky-nav__menu[data-is-active="false"] {
    display: none;
}

/* Link styling with hover effects */
.sticky-nav__link {
    position: relative;
    display: inline-block;
    padding: var(--size-3) var(--size-3);
    color: inherit;
    text-decoration: none;
    text-transform: capitalize;
    font-weight: var(--heading-large-weight);
    cursor: pointer;
    overflow: hidden;
}

.sticky-nav__link--cta {
    background-color: var(--nav-cta-bg);
}

.sticky-nav__link span {
    position: relative;
    color: currentColor;
    transition: color var(--nav-link-transition);
}

.sticky-nav__link--cta span {
    color: var(--nav-cta-text);
}

/* Hover effect */
.sticky-nav__link::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--nav-hover-bg);
    transform: scaleX(0);
    transform-origin: 100% 100%;
    transition: transform var(--nav-link-transition);
}

.sticky-nav__link:hover::before {
    transform-origin: 0 0;
    transform: scaleX(1);
}

.sticky-nav__link:hover span {
    color: var(--nav-hover-text);
}

/* Tablet and desktop styles */
@media (min-width: 768px) {
    .sticky-nav__wrapper {
        grid-template-columns: auto 1fr auto;
        grid-template-rows: 1fr;
        align-items: center;
    }

    .sticky-nav__menu {
        grid-row: 1 / -1;
        grid-column: 2 / -1;

        justify-self: end;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content: flex-end;
        gap: var(--size-1);

        width: fit-content;
        height: 100%;
    }

    .sticky-nav__menu[data-is-active="false"] {
        display: flex;
    }

    .sticky-nav__link {
        padding: var(--size-1) var(--size-3);
    }

    /* Fixed menu state adjustments for desktop */
    .sticky-nav[data-fixed-menu="true"][data-is-active="true"] .sticky-nav__menu,
    .sticky-nav[data-fixed-menu="true"][data-is-active="false"] .sticky-nav__menu {
        color: var(--nav-text);
        background-color: transparent;
        padding: var(--size-0);
    }

    .sticky-nav[data-fixed-menu="true"][data-is-active="true"] .sticky-nav__link span {
        color: var(--nav-text);
    }

    .sticky-nav[data-fixed-menu="true"][data-is-active="true"] .sticky-nav__link--cta span {
        color: var(--nav-cta-text);
    }

    /* Black text variant */
    .sticky-nav[data-is-active="false"][data-black-text="true"] .sticky-nav__menu {
        padding: var(--size-2);
        color: var(--clr-primary-dark-text);
        background-color: var(--clr-primary-dark);
    }
}

/* Relative color syntax support */
.sticky-nav {
    /* Example of how to use relative colors based on parent background */
    --nav-text-relative-light: oklch(from var(--nav-bg) calc(l - .50) c h);
    --nav-text-relative-dark: oklch(from var(--nav-bg) calc(l + .50) c h);
}

/* Apply relative colors based on background darkness */
[data-theme="light"] .sticky-nav {
    --nav-text: var(--nav-text-relative-light);
}

[data-theme="dark"] .sticky-nav {
    --nav-text: var(--nav-text-relative-dark);
}

/* You can also target specific states */
/* .sticky-nav[data-is-active="true"] {
    --nav-text: oklch(from var(--nav-active-bg) calc(l - .50) c h);
} */

/* For custom backgrounds, you can define a custom property on the nav element */
.sticky-nav[style*="--custom-bg"] {
    --nav-text: oklch(from var(--custom-bg) calc(l - .50) c h);
    --nav-hover-text: oklch(from var(--custom-bg) calc(l + .50) c h);
}